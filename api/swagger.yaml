---
swagger: "2.0"
info:
  description: "A sample API that uses a petstore as an example to demonstrate features\
    \ in the swagger-2.0 specification"
  version: "1.0.0"
  title: "Swagger Petstore (Simple)"
  termsOfService: "http://helloreverb.com/terms/"
  contact:
    name: "Swagger API team"
    url: "http://swagger.io"
    email: "foo@example.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "rcis18-petstore-vtb-vtorres1976.c9users.io"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /pets:
    get:
      description: "Returns all pets from the system that the user has access to"
      operationId: "findPets"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters: []
      responses:
        200:
          description: "pet response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/pet"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new pet in the store.  Duplicates are allowed"
      operationId: "addPet"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "pet"
        description: "Pet to add to the store"
        required: true
        schema:
          $ref: "#/definitions/pet"
      responses:
        200:
          description: "pet response"
          schema:
            $ref: "#/definitions/pet"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /pets/{name}:
    get:
      description: "Returns a user based on a single ID, if the user does not have\
        \ access to the pet"
      operationId: "findPet"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "name"
        in: "path"
        description: "name of pet to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "pet response"
          schema:
            $ref: "#/definitions/pet"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "deletes a single pet based on the ID supplied"
      operationId: "deletePet"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of pet to delete"
        required: true
        type: "string"
      responses:
        204:
          description: "pet deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
definitions:
  pet:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      tag:
        type: "string"
    example:
      name: "bobby"
      tag: "dog"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
